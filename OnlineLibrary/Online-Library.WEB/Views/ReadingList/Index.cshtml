@model Online_Library.Domain.Dtos.ReadingListDto

@{
ViewData["Title"] = "Details";
}

<div class="container">
    <h4>Reading List</h4>
    <hr />
    <div class="row">
        @if (Model.BooksInReadingList != null && Model.BooksInReadingList.Count > 0)
        {
        @foreach (var bookInReadingList in Model.BooksInReadingList)
        {
        <div class="col-md-4 mb-4">
            <div class="card h-100">
                <div class="card-body">
                    <h5 class="card-title">@Html.DisplayFor(modelItem => bookInReadingList.Book.Title)</h5>
                    <p class="card-text">
                        <strong>Author:</strong>
                        @Html.DisplayFor(modelItem => bookInReadingList.Book.Author.Name)
                        @Html.DisplayFor(modelItem => bookInReadingList.Book.Author.Surname)
                    </p>
                    <p class="card-text">
                        <strong>Published:</strong> @Html.DisplayFor(modelItem => bookInReadingList.Book.PublishDate)
                    </p>
                </div>
                <div class="card-footer">
                    <a href="@Url.Action("Details", "Books", new { id = bookInReadingList.Book.Id })" class="btn btn-primary">View Details</a>
                </div>
            </div>
        </div>
        }
        }
        else
        {
        <div class="col-12">
            <p>No books in the reading list.</p>
        </div>
        }
    </div>
    <div>
        <p><strong>Total Books:</strong> @Model.Count</p>
    </div>
    <div>
        <form asp-action="ClearReadingList" method="post">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-danger">Clear Reading List</button>
        </form>
        <a asp-action="Index" class="btn btn-secondary">Back to List</a>
    </div>
</div>
